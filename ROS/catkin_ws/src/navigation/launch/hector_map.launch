<?xml version="1.0"?>

<launch>
  <!-- Velodyne PointCloud Launchers -->

  <!-- declare arguments with default values -->
  <arg name="calibration" default="$(find velodyne_pointcloud)/params/VLP16db.yaml"/>
  <arg name="device_ip" default="192.168.1.201" />
  <arg name="frame_id" default="velodyne" />
  <arg name="manager" default="$(arg frame_id)_nodelet_manager" />
  <arg name="max_range" default="130.0" />
  <arg name="min_range" default="1" />
  <arg name="pcap" default="" />
  <arg name="port" default="2368" />
  <arg name="read_fast" default="false" />
  <arg name="read_once" default="false" />
  <arg name="repeat_delay" default="0.0" />
  <arg name="rpm" default="1200.0" />
  <arg name="gps_time" default="false" />
  <arg name="pcap_time" default="false" />
  <arg name="cut_angle" default="-0.01" />
  <arg name="timestamp_first_packet" default="false" />
  <arg name="laserscan_ring" default="-1" />
  <arg name="laserscan_resolution" default="0.007" />
  <arg name="organize_cloud" default="false" />

  <!-- start nodelet manager and driver nodelets -->
  <include file="$(find velodyne_driver)/launch/nodelet_manager.launch">
    <arg name="device_ip" value="$(arg device_ip)"/>
    <arg name="frame_id" value="$(arg frame_id)"/>
    <arg name="manager" value="$(arg manager)" />
    <arg name="model" value="VLP16"/>
    <arg name="pcap" value="$(arg pcap)"/>
    <arg name="port" value="$(arg port)"/>
    <arg name="read_fast" value="$(arg read_fast)"/>
    <arg name="read_once" value="$(arg read_once)"/>
    <arg name="repeat_delay" value="$(arg repeat_delay)"/>
    <arg name="rpm" value="$(arg rpm)"/>
    <arg name="gps_time" value="$(arg gps_time)"/>
    <arg name="pcap_time" value="$(arg pcap_time)"/>
    <arg name="cut_angle" value="$(arg cut_angle)"/>
    <arg name="timestamp_first_packet" value="$(arg timestamp_first_packet)"/>
  </include>

  <!-- start transform nodelet -->
  <include file="$(find velodyne_pointcloud)/launch/transform_nodelet.launch">
    <arg name="model" value="VLP16"/>
    <arg name="calibration" value="$(arg calibration)"/>
    <arg name="manager" value="$(arg manager)" />
    <arg name="fixed_frame" value="" />
    <arg name="target_frame" value="" />
    <arg name="max_range" value="$(arg max_range)"/>
    <arg name="min_range" value="$(arg min_range)"/>
    <arg name="organize_cloud" value="$(arg organize_cloud)"/>
  </include>

  <!-- start laserscan nodelet -->
  <include file="$(find velodyne_pointcloud)/launch/laserscan_nodelet.launch">
    <arg name="manager" value="$(arg manager)" />
    <arg name="ring" value="$(arg laserscan_ring)"/>
    <arg name="resolution" value="$(arg laserscan_resolution)"/>
  </include>

  <!-- Hector_SLAM Configuration -->

  <arg name="tf_map_scanmatch_transform_frame_name" default="base_link"/>
  <arg name="base_frame" default="base_footprint"/>
  <arg name="odom_frame" default="odom"/>
  <arg name="pub_map_odom_transform" default="false"/>
  <arg name="scan_subscriber_queue_size" default="500"/>
  <arg name="scan_topic" default="scan"/>
  <arg name="map_size" default="1500"/>
  
  <node pkg="hector_mapping" type="hector_mapping" name="hector_mapping" output="screen">
    
    <!-- Frame names -->
    <param name="map_frame" value="map" />
    <param name="base_frame" value="$(arg base_frame)" />
    <!-- <param name="odom_frame" value="$(arg odom_frame)" /> -->
    
    <!-- Tf use -->
    <param name="use_tf_scan_transformation" value="false"/>
    <param name="use_tf_pose_start_estimate" value="false"/>
    <param name="pub_map_odom_transform" value="false"/>
    
    <!-- Map size / start point -->
    <param name="map_resolution" value=".05"/>
    <param name="map_size" value="2048"/>
    <param name="map_start_x" value="0.5"/>
    <param name="map_start_y" value="0.5" />
    <param name="map_multi_res_levels" value="2" />
    
    <!-- Map update parameters -->
    <param name="update_factor_free" value="0.4"/>
    <param name="update_factor_occupied" value="0.9" />    
    <param name="map_update_distance_thresh" value=".6"/>
    <param name="map_update_angle_thresh" value="0.9" />
    <param name="laser_min_dist" value = "1" />
    <param name="laser_max_dist" value = "130.0" />
    <param name="laser_z_min_value" value = "-1" />
    <param name="laser_z_max_value" value = "1" />
    <param name="map_pub_period" value = "0.5" />

    <param name="advertise_map_service" value="true"/>

    <param name="tf_map_scanmatch_transform_frame_name" value="$(arg tf_map_scanmatch_transform_frame_name)" />
    <param name="pub_map_scanmatch_transform" value="false" />

  </node>
    
    <!-- Advertising config --> 

  <node pkg="tf" type="static_transform_publisher" name="map_base_footprint" args="0 0 0 0 0 0 map base_footprint 100"/>
  <!-- <node pkg="tf" type="static_transform_publisher" name="footprint_to_frame" args="0 0 0 0 0 0 base_footprint base_frame 100"/> -->
	<node pkg="tf" type="static_transform_publisher" name="base_link_2_velodyne" args="0 0 0 0 0 0 base_link velodyne 5"/>

  <node pkg="laser_scan_matcher" type="laser_scan_matcher_node" name="laser_scan_matcher_node" output="screen">
    <param name="base_frame" value="base_link"/>
    <param name="fixed_frame" value="map"/>
    <param name="use_alpha_beta" value="false"/>
    <param name="use_odom" value="false"/>
    <param name="use_imu" value="true"/>
    <param name="max_iterations" value="100"/>
    <param name="publish_pose" value="true"/>
    <param name="publish_tf" value="true"/>
    <param name="use_vel" value="false"/>


  </node>

  <!-- <node name="costmap_node" pkg="costmap_2d" type="costmap_2d_node">
      <rosparam file="$(find navigation)/config/global_costmap_params.yaml" command="load" ns="costmap" />
  </node> -->

  <arg name="no_static_map" default="false"/>

  <arg name="base_global_planner" default="navfn/NavfnROS"/>
  <!-- <arg name="base_local_planner" default="dwa_local_planner/DWAPlannerROS"/> -->
  <arg name="base_local_planner" default="base_local_planner/TrajectoryPlannerROS"/>


  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">

    <param name="base_global_planner" value="$(arg base_global_planner)"/>
    <param name="base_local_planner" value="$(arg base_local_planner)"/>  
    <rosparam file="$(find navigation)/config/planner.yaml" command="load"/>

    <!-- observation sources located in costmap_common.yaml -->
    <rosparam file="$(find navigation)/config/costmap_common.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find navigation)/config/costmap_common.yaml" command="load" ns="local_costmap" />

    <!-- local costmap, needs size -->
    <rosparam file="$(find navigation)/config/costmap_local.yaml" command="load" ns="local_costmap" />
    <param name="local_costmap/width" value="10.0"/>
    <param name="local_costmap/height" value="10.0"/>

    <!-- static global costmap, static map provides size -->
    <rosparam file="$(find navigation)/config/costmap_global_static.yaml" command="load" ns="global_costmap" unless="$(arg no_static_map)"/>
    
    <!-- global costmap with laser, for odom_navigation_demo -->
    <rosparam file="$(find navigation)/config/costmap_global_laser.yaml" command="load" ns="global_costmap" if="$(arg no_static_map)"/>
    <param name="global_costmap/width" value="100.0" if="$(arg no_static_map)"/>
    <param name="global_costmap/height" value="100.0" if="$(arg no_static_map)"/>
  </node>

    <!-- OLD MOVE BASE CONFIG -->
  <!-- <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find navigation)/config/costmap_common_params.yaml" command="load" ns="global_costmap"/>
    <rosparam file="$(find navigation)/config/costmap_common_params.yaml" command="load" ns="local_costmap"/>
    <rosparam file="$(find navigation)/config/local_costmap_params.yaml" command="load"/>
    <rosparam file="$(find navigation)/config/global_costmap_params.yaml" command="load"/>
    <rosparam file="$(find navigation)/config/trajectory_planner.yaml" command="load"/>
    <rosparam file="$(find navigation)/config/move_base_params.yaml" command="load"/>
  </node> -->
  
  <!-- Launch RVIZ Using Velodyne Configuration -->
  <node pkg="rviz" type="rviz" name="rviz" args="-d /home/max/Documents/catkin_ws/rviz_config_Hector_SLAM.rviz"/>
  </launch>
